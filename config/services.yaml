# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

imports:
    - { resource: parameters.yaml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Command\CsvImportCommand:
        arguments:
            $targetDirectory: '%kernel.project_dir%/src/Data/'

    App\Service\CSVMailSender:
        arguments:
            $senderEmail: '%adminBox%'
            $recipientEmail: '%recipientBox%'

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%kernel.project_dir%/public/uploads/images/'



    parsing:
        class: App\Rabbit\ProductProducer
        decorates: old_sound_rabbit_mq.parsing_producer

    product_consumer:
        class: App\Rabbit\ProductConsumer

    App\Controller\ProductController:
        arguments:
            $producer: '@old_sound_rabbit_mq.parsing_producer'

old_sound_rabbit_mq:
    connections:
        default:
            host: '%rabbitHost%'
            user: '%rabbitUser%'
            password: '%rabbitPass%'
            vhost: '%rabbitVHost%'
    producers:
        parsing:
            connection: default
            exchange_options:
                name: products
                type: topic
    consumers:
        parsing:
            connection:       default
            exchange_options: {name: 'products', type: topic}
            queue_options:    {name: 'products'}
            callback:         product_consumer

